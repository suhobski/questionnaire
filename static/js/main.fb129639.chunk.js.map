{"version":3,"sources":["styles/global.js","context/index.js","components/Header/Title.jsx","components/Header/index.jsx","styles/Container.jsx","styles/MainContent.jsx","styles/Button.jsx","styles/TextInput.jsx","styles/Wrap.jsx","pages/Greeting/index.jsx","styles/Label.jsx","components/UserAnswerRadio/index.jsx","components/UserAnswerCheckbox/index.jsx","components/UserAnswerText/index.jsx","pages/Test/index.js","components/UserAnswerResult/ListItem.jsx","components/UserAnswerResult/Question.jsx","components/UserAnswerResult/index.jsx","pages/Results/index.js","components/AppRouter/index.jsx","App.js","index.js"],"names":["createGlobalStyle","AppContext","createContext","Title","styled","h1","Header","useContext","setName","setAnswers","setCurrentQuestionId","navigate","useNavigate","onClick","Container","div","MainContent","main","Button","button","props","disabled","css","TextInput","input","Wrap","form","Greeting","name","nameStartButton","value","onChange","e","target","Label","label","UserAnswerRadio","question","id","answerType","questAnswers","answers","quest","map","item","type","answer","checked","userAnswer","prev","UserAnswerCheckbox","isChecked","Boolean","includes","newQuestionAnswers","prevQuestionAnswers","filter","handleRadioChange","UserAnswerText","Test","nameNextButton","nameFinishButton","questions","currentQuestionId","currentQuestion","useMemo","find","inputType","buttonValue","length","useEffect","onSubmit","preventDefault","ListItem","li","Question","UserAnswerResult","index","PrintUserAnswer","answ","Results","idAnswers","Object","keys","AppRouter","path","element","App","useState","data","jsonData","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fb129639.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport default createGlobalStyle`\r\n  *,\r\n  *::before,\r\n  *::after {\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  ul,\r\n  ol {\r\n    padding: 0;\r\n  }\r\n\r\n  body,\r\n  h1,\r\n  h2,\r\n  h3,\r\n  h4,\r\n  p,\r\n  ul,\r\n  ol,\r\n  li,\r\n  figure,\r\n  figcaption,\r\n  blockquote,\r\n  dl,\r\n  dd {\r\n    margin: 0;\r\n  }\r\n\r\n  html {\r\n    height: 100%;\r\n  }\r\n\r\n  #root {\r\n    height: 100%;\r\n  }\r\n  body {\r\n    height: 100%;\r\n    text-rendering: optimizeSpeed;\r\n    line-height: 1.5;\r\n    font-family: sans-serif;\r\n    font-size: 20px;\r\n    color: #5a5a65;\r\n  }\r\n  \r\n  ul[class],\r\n  ol[class] {\r\n    list-style: none;\r\n  }\r\n\r\n  input,\r\n  button,\r\n  textarea,\r\n  select {\r\n    font: inherit;\r\n  }\r\n\r\n  a:not([class]) {\r\n    text-decoration-skip-ink: auto;\r\n  }\r\n`;\r\n","import { createContext } from \"react\";\r\n\r\nexport const AppContext = createContext(null);\r\n","import styled from \"styled-components\";\r\n\r\nconst Title = styled.h1`\r\n  text-align: center;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport default Title;\r\n","import React, { useContext } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { AppContext } from \"../../context\";\r\nimport Title from \"./Title\";\r\n\r\nconst Header = () => {\r\n  const { setName, setAnswers, setCurrentQuestionId } = useContext(AppContext);\r\n  let navigate = useNavigate();\r\n\r\n  const titleClick = () => {\r\n    setName(\"\");\r\n    setAnswers({});\r\n    setCurrentQuestionId(1);\r\n    navigate(\"/questionnaire\");\r\n  };\r\n  \r\n  return (\r\n    <header>\r\n      <Title onClick={titleClick}>Questionnaire</Title>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  align-self: stretch;\r\n  grid-template-rows: auto 1fr;\r\n  max-width: 800px;\r\n  height: 100%;\r\n  margin: auto;\r\n  padding: 16px;\r\n`;\r\n\r\nexport default Container;\r\n","import styled from \"styled-components\";\r\n\r\nconst MainContent = styled.main`\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport default MainContent;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nconst Button = styled.button`\r\n  padding: 6px 12px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  outline: none;\r\n  background: coral;\r\n  cursor: pointer;\r\n  ${(props) =>\r\n    props.disabled &&\r\n    css`\r\n      background: lightgrey;\r\n    `}\r\n`;\r\n\r\nexport default Button;\r\n","import styled from \"styled-components\";\r\n\r\nconst TextInput = styled.input`\r\n  padding: 6px;\r\n  border: 1px solid coral;\r\n  border-radius: 4px;\r\n  outline: none;\r\n`;\r\n\r\nexport default TextInput;\r\n","import styled from \"styled-components\";\r\n\r\nconst Wrap = styled.form`\r\n  display: grid;\r\n  row-gap: 8px;\r\n`;\r\n\r\nexport default Wrap;\r\n","import React, { useContext } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport Button from \"../../styles/Button\";\r\nimport TextInput from \"../../styles/TextInput\";\r\nimport { AppContext } from \"../../context\";\r\nimport Wrap from \"../../styles/Wrap\";\r\n\r\nconst Greeting = () => {\r\n  const { name, setName, nameStartButton } = useContext(AppContext);\r\n  let navigate = useNavigate();\r\n\r\n  return (\r\n    <Wrap>\r\n      <h3>Введите имя:</h3>\r\n      <TextInput value={name} onChange={(e) => setName(e.target.value)} />\r\n      <Button onClick={() => navigate(\"/questionnaire/test\")} disabled={!name}>\r\n        {nameStartButton}\r\n      </Button>\r\n    </Wrap>\r\n  );\r\n};\r\n\r\nexport default Greeting;\r\n","import styled from \"styled-components\";\r\n\r\nconst Label = styled.label`\r\n  display: block;\r\n  margin-bottom: 8px;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport default Label;\r\n","import React, { useContext } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { AppContext } from \"../../context\";\r\nimport Label from \"../../styles/Label\";\r\n\r\nconst UserAnswerRadio = ({ question }) => {\r\n  const { id, answerType, answers: questAnswers, quest } = question;\r\n  const { answers, setAnswers } = useContext(AppContext);\r\n\r\n  const handleRadioChange = (e, userAnswer) => {\r\n    setAnswers((prev) => {\r\n      return { ...prev, [id]: { userAnswer, answerType, quest } };\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {questAnswers.map((item) => (\r\n        <Label key={item.id}>\r\n          <input\r\n            type={answerType}\r\n            value={item.answer}\r\n            checked={answers[id]?.userAnswer.id === item.id}\r\n            onChange={(e) => handleRadioChange(e, item)}\r\n          />\r\n          {item.answer}\r\n        </Label>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nUserAnswerRadio.propTypes = {\r\n  question: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    quest: PropTypes.string,\r\n    answerType: PropTypes.string, \r\n    answers: PropTypes.array,\r\n  }).isRequired,\r\n}\r\n\r\n\r\nexport default UserAnswerRadio;\r\n","import React, { useContext } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { AppContext } from \"../../context\";\r\nimport Label from \"../../styles/Label\";\r\n\r\nconst UserAnswerCheckbox = ({ question }) => {\r\n  const { id, answerType, answers: questAnswers, quest } = question;\r\n  const { answers, setAnswers } = useContext(AppContext);\r\n  const isChecked = (item) => Boolean(answers?.[id]?.userAnswer.includes(item));\r\n\r\n  const handleRadioChange = (e, userAnswer) => {\r\n    setAnswers((prev) => {\r\n      const checked = e.target.checked;\r\n      const prevQuestionAnswers = prev[id]?.userAnswer || [];\r\n      let newQuestionAnswers;\r\n      if (checked) {\r\n        newQuestionAnswers = [...prevQuestionAnswers, userAnswer];\r\n      } else {\r\n        newQuestionAnswers = prevQuestionAnswers.filter(\r\n          (item) => item.id !== userAnswer.id\r\n        );\r\n      }\r\n      return {\r\n        ...prev,\r\n        [id]: { userAnswer: newQuestionAnswers, answerType, quest },\r\n      };\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {questAnswers.map((item) => (\r\n        <Label key={item.id}>\r\n          <input\r\n            type={answerType}\r\n            value={item.answer}\r\n            checked={isChecked(item)}\r\n            onChange={(e) => handleRadioChange(e, item)}\r\n          />\r\n          {item.answer}\r\n        </Label>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nUserAnswerCheckbox.propTypes = {\r\n  question: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    quest: PropTypes.string,\r\n    answerType: PropTypes.string, \r\n    answers: PropTypes.array,\r\n  }).isRequired,\r\n}\r\n\r\nexport default UserAnswerCheckbox;\r\n","import React, { useContext } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { AppContext } from \"../../context\";\r\nimport TextInput from \"../../styles/TextInput\";\r\n\r\nconst UserAnswerText = ({ question }) => {\r\n  const { id, answerType, quest } = question;\r\n  const { answers, setAnswers } = useContext(AppContext);\r\n\r\n  const handleInputChange = (e) => {\r\n    setAnswers((prev) => {\r\n      return {\r\n        ...prev,\r\n        [id]: { userAnswer: e.target.value, answerType, quest },\r\n      };\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <TextInput\r\n        value={answers[id]?.userAnswer || \"\"}\r\n        onChange={handleInputChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nUserAnswerText.propTypes = {\r\n  question: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    quest: PropTypes.string,\r\n    answerType: PropTypes.string, \r\n    answers: PropTypes.string,\r\n  }).isRequired,\r\n}\r\n\r\nexport default UserAnswerText;\r\n","import React, { useContext, useEffect, useMemo } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport Button from \"../../styles/Button\";\r\nimport { AppContext } from \"../../context\";\r\nimport Wrap from \"../../styles/Wrap\";\r\nimport UserAnswerRadio from \"../../components/UserAnswerRadio\";\r\nimport UserAnswerCheckbox from \"../../components/UserAnswerCheckbox\";\r\nimport UserAnswerText from \"../../components/UserAnswerText\";\r\n\r\nconst Test = () => {\r\n  const {\r\n    name,\r\n    answers,\r\n    nameNextButton,\r\n    nameFinishButton,\r\n    questions,\r\n    currentQuestionId,\r\n    setCurrentQuestionId,\r\n  } = useContext(AppContext);\r\n  let navigate = useNavigate();\r\n\r\n  const currentQuestion = useMemo(() => {\r\n    return questions.find((item) => item.id === currentQuestionId);\r\n  }, [questions, currentQuestionId]);\r\n\r\n  const inputType = useMemo(() => {\r\n    switch (currentQuestion.answerType) {\r\n      case \"radio\":\r\n        return <UserAnswerRadio question={currentQuestion} />;\r\n      case \"checkbox\":\r\n        return <UserAnswerCheckbox question={currentQuestion} />;\r\n      case \"text\":\r\n        return <UserAnswerText question={currentQuestion} />;\r\n      default:\r\n        return null;\r\n    }\r\n  }, [currentQuestion]);\r\n\r\n  const buttonValue =\r\n    currentQuestionId === questions.length ? nameFinishButton : nameNextButton;\r\n\r\n  useEffect(() => {\r\n    if (!name) {\r\n      navigate(\"/questionnaire\");\r\n    }\r\n  });\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!answers[currentQuestionId]) {\r\n      return;\r\n    }\r\n\r\n    if (currentQuestionId === questions.length) {\r\n      navigate(\"/questionnaire/results\");\r\n    } else {\r\n      setCurrentQuestionId(currentQuestionId + 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Wrap onSubmit={handleSubmit}>\r\n      <h3>Опрос проходит: {name}</h3>\r\n      <p>{currentQuestion.quest}</p>\r\n      {inputType}\r\n      <Button>{buttonValue}</Button>\r\n    </Wrap>\r\n  );\r\n};\r\n\r\nexport default Test;\r\n","import styled from \"styled-components\";\r\n\r\nconst ListItem = styled.li`\r\n  list-style-type: none;\r\n`;\r\n\r\nexport default ListItem;\r\n","import styled from \"styled-components\";\r\n\r\nconst Question = styled.div`\r\n  font-weight: bold;\r\n`;\r\n\r\nexport default Question;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ListItem from \"./ListItem\";\r\nimport Question from \"./Question\";\r\n\r\nconst UserAnswerResult = ({ answer, index }) => {\r\n  const { userAnswer, answerType, quest } = answer;\r\n\r\n  const PrintUserAnswer = () => {\r\n    if (answerType === \"checkbox\") {\r\n      return (\r\n        <ul>\r\n          {userAnswer.map((answ) => (\r\n            <ListItem key={answ.id}>{answ.answer}</ListItem>\r\n          ))}\r\n        </ul>\r\n      );\r\n    }\r\n    if (answerType === \"radio\") {\r\n      return <p>{userAnswer.answer}</p>;\r\n    }\r\n    if (answerType === \"text\") {\r\n      return <p>{userAnswer}</p>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Question>\r\n        {index}. {quest}\r\n      </Question>\r\n      <PrintUserAnswer />\r\n    </div>\r\n  );\r\n};\r\n\r\nUserAnswerResult.propTypes = {\r\n  answer: PropTypes.shape({\r\n    userAnswer: PropTypes.any,\r\n    answerType: PropTypes.string,\r\n    quest: PropTypes.string,\r\n  }).isRequired,\r\n  index: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default UserAnswerResult;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport UserAnswerResult from \"../../components/UserAnswerResult\";\r\nimport { AppContext } from \"../../context\";\r\nimport Button from \"../../styles/Button\";\r\nimport Wrap from \"../../styles/Wrap\";\r\n\r\nconst Results = () => {\r\n  const { name, answers, setName, setAnswers, setCurrentQuestionId } =\r\n    useContext(AppContext);\r\n  const idAnswers = Object.keys(answers);\r\n  let navigate = useNavigate();\r\n\r\n  const handleButtonClick = () => {\r\n    setName(\"\");\r\n    setAnswers({});\r\n    setCurrentQuestionId(1);\r\n    navigate(\"/questionnaire\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!name) {\r\n      navigate(\"/questionnaire\");\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Wrap>\r\n      <h2>Results</h2>\r\n      <p>Name: {name}</p>\r\n      {idAnswers.map((id, index) => (\r\n        <UserAnswerResult answer={answers[id]} index={index + 1} key={id} />\r\n      ))}\r\n      <Button onClick={handleButtonClick}>Home page</Button>\r\n    </Wrap>\r\n  );\r\n};\r\n\r\nexport default Results;\r\n","import React from \"react\";\r\nimport { Route, Routes } from \"react-router\";\r\nimport Greeting from \"../../pages/Greeting\";\r\nimport Test from \"../../pages/Test\";\r\nimport Results from \"../../pages/Results\";\r\n\r\nconst AppRouter = () => {\r\n  return (\r\n    <Routes>\r\n      <Route path=\"/questionnaire\" element={<Greeting />} />\r\n      <Route path=\"/questionnaire/test\" element={<Test />} />\r\n      <Route path=\"/questionnaire/results\" element={<Results />} />\r\n      <Route path=\"*\" element={<h2>404 error</h2>} />\r\n    </Routes>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useState } from \"react\";\r\nimport GlobalStyles from \"./styles/global\";\r\nimport Header from \"./components/Header\";\r\nimport Container from \"./styles/Container\";\r\nimport { AppContext } from \"./context\";\r\nimport jsonData from \"./data.json\";\r\nimport MainContent from \"./styles/MainContent\";\r\nimport AppRouter from \"./components/AppRouter\";\r\n\r\nconst App = () => {\r\n  const [answers, setAnswers] = useState([]);\r\n  const [currentQuestionId, setCurrentQuestionId] = useState(1);\r\n  const [name, setName] = useState(\"\");\r\n  const [data] = jsonData;\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        answers,\r\n        setAnswers,\r\n        name,\r\n        setName,\r\n        currentQuestionId,\r\n        setCurrentQuestionId,\r\n        ...data,\r\n      }}\r\n    >\r\n      <Container>\r\n        <GlobalStyles />\r\n        <Header />\r\n        <MainContent>\r\n          <AppRouter />\r\n        </MainContent>\r\n      </Container>\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}